./apps/ci_lab/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./apps/ci_lab/.github/workflows/static-analysis.yml:7:      - main
./apps/ci_lab/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./apps/ci_lab/.github/workflows/format-check.yml:7:      - main
./apps/ci_lab/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./apps/ci_lab/.github/workflows/codeql-build.yml:6:      - main
./apps/ci_lab/SECURITY.md:13:**Disclaimer: nasa/ci_lab is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/ci_lab/blob/main/LICENSE).**
./apps/ci_lab/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of ci_lab in Github Actions. 
./apps/ci_lab/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./apps/ci_lab/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./apps/ci_lab/fsw/src/ci_lab_app.c:79:/* CI_Lab_AppMain() -- Application entry point and main process loop          */
./apps/ci_lab/fsw/src/ci_lab_app.c:156:    status = OS_SocketOpen(&CI_LAB_Global.SocketID, OS_SocketDomain_INET, OS_SocketType_DATAGRAM);
./apps/ci_lab/fsw/src/ci_lab_app.c:164:        OS_SocketAddrInit(&CI_LAB_Global.SocketAddress, OS_SocketDomain_INET);
./apps/ci_lab/fsw/src/ci_lab_app.h:24:**   This file is main hdr file for the Command Ingest lab application.
./apps/sch_lab/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./apps/sch_lab/.github/workflows/static-analysis.yml:7:      - main
./apps/sch_lab/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./apps/sch_lab/.github/workflows/format-check.yml:7:      - main
./apps/sch_lab/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./apps/sch_lab/.github/workflows/codeql-build.yml:6:      - main
./apps/sch_lab/SECURITY.md:13:**Disclaimer: nasa/sch_lab is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/sch_lab/blob/main/LICENSE).**
./apps/sch_lab/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of sch_lab in Github Actions. 
./apps/sch_lab/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./apps/sch_lab/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./apps/sample_app/unit-test/CMakeLists.txt:40:# with the sample_lib stub library (this is mainly just an example of how this 
./apps/sample_app/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./apps/sample_app/.github/workflows/static-analysis.yml:7:      - main
./apps/sample_app/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./apps/sample_app/.github/workflows/format-check.yml:7:      - main
./apps/sample_app/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./apps/sample_app/.github/workflows/codeql-build.yml:6:      - main
./apps/sample_app/README.md:24:- Adds CONTRIBUTIING.md that links to the main cFS contributing guide.
./apps/sample_app/README.md:61:- No behavior changes. All identifiers now use the prefix `SAMPLE_APP_`. Changes the name of the main function from SAMPLE_AppMain to SAMPLE_APP_Main which affects the CFE startup script.
./apps/sample_app/SECURITY.md:13:**Disclaimer: nasa/sample_app is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/sample_app/blob/main/LICENSE).**
./apps/sample_app/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of sample_app in Github Actions. 
./apps/sample_app/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./apps/sample_app/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./apps/sample_app/fsw/src/sample_app.h:77:    ** Run Status variable used in the main processing loop
./apps/sample_app/fsw/src/sample_app.c:46:/* SAMPLE_APP_Main() -- Application entry point and main process loop         */
./apps/sample_lib/ut-stubs/sample_lib_stubs.c:40: * main FSW code does.  This should define the same functions
./apps/sample_lib/unit-test/CMakeLists.txt:63:# with the local "overrides" library (this is mainly just an example of how this 
./apps/sample_lib/unit-test/coveragetest/coveragetest_sample_lib.c:85:         * The remainder of the OS_printf() arguments are in the va_list
./apps/sample_lib/unit-test/override_src/libc_string_stubs.c:77:        /* clear the remained, as strncpy would */
./apps/sample_lib/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./apps/sample_lib/.github/workflows/static-analysis.yml:7:      - main
./apps/sample_lib/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./apps/sample_lib/.github/workflows/format-check.yml:7:      - main
./apps/sample_lib/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./apps/sample_lib/.github/workflows/codeql-build.yml:6:      - main
./apps/sample_lib/README.md:22:- Adds CONTRIBUTING.md that links to the main cFS contributing guide.
./apps/sample_lib/SECURITY.md:13:**Disclaimer: nasa/sample_lib is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/sample_lib/blob/main/LICENSE).**
./apps/sample_lib/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of sample_lib in Github Actions. 
./apps/sample_lib/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./apps/sample_lib/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./apps/to_lab/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./apps/to_lab/.github/workflows/static-analysis.yml:7:      - main
./apps/to_lab/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./apps/to_lab/.github/workflows/format-check.yml:7:      - main
./apps/to_lab/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./apps/to_lab/.github/workflows/codeql-build.yml:6:      - main
./apps/to_lab/README.md:41:- TO remains command-able after a "remove all subscriptions" command; the command now only removes all subscriptions to the Tlm_pipe
./apps/to_lab/SECURITY.md:13:**Disclaimer: nasa/to_lab is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/to_lab/blob/main/LICENSE).**
./apps/to_lab/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of to_lab in Github Actions. 
./apps/to_lab/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./apps/to_lab/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./apps/to_lab/fsw/src/to_lab_app.c:90:/* TO_Lab_AppMain() -- Application entry point and main process loop */
./apps/to_lab/fsw/src/to_lab_app.c:458:    status = OS_SocketOpen(&TO_LAB_Global.TLMsockid, OS_SocketDomain_INET, OS_SocketType_DATAGRAM);
./apps/to_lab/fsw/src/to_lab_app.c:557:    OS_SocketAddrInit(&d_addr, OS_SocketDomain_INET);
./cfe/CMakeLists.txt:38:#   the main targets.cmake file.  At the mission level, this creates a sub
./cfe/modules/sb/ut-coverage/sb_UT.c:170:} /* end main */
./cfe/modules/sb/ut-coverage/sb_UT.c:323:** Function for calling SB main task test functions
./cfe/modules/sb/ut-coverage/sb_UT.c:332:** Test main task with a packet receive error
./cfe/modules/sb/ut-coverage/sb_UT.c:350:** Test main task with an application initialization error
./cfe/modules/sb/ut-coverage/sb_UT.h:246:** \brief Function for calling SB main task test functions
./cfe/modules/sb/ut-coverage/sb_UT.h:249:**        Function for calling SB main task test functions.
./cfe/modules/sb/ut-coverage/sb_UT.h:261:** \brief Test main task with a packet receive error
./cfe/modules/sb/ut-coverage/sb_UT.h:264:**        This function tests main task with a packet receive error.
./cfe/modules/sb/ut-coverage/sb_UT.h:276:** \brief Test main task with an application initialization error
./cfe/modules/sb/ut-coverage/sb_UT.h:279:**        This function tests main task with an application initialization
./cfe/modules/sb/fsw/src/cfe_sb_task.c:830:    /* Go through the temp buffer and fill in the remaining info for each dest */
./cfe/modules/sb/fsw/src/cfe_sb_task.c:989:         * Fill out the remainder of meta data.
./cfe/modules/sb/fsw/src/cfe_sb_task.c:1132:         * Fill out the remainder of meta data.
./cfe/modules/sb/fsw/src/cfe_sb_task.c:1262:         * Fill out the remainder of meta data.
./cfe/modules/sb/fsw/src/cfe_sb_api.c:1247:        /* Status remains CFE_SUCCESS if route is valid or not */
./cfe/modules/sb/fsw/src/cfe_sb_api.c:1807:     * to maintain API independence - even though the values are
./cfe/modules/sb/fsw/src/cfe_sb_api.c:1854:             * in the loop within the app's main task.  There is currently no separate
./cfe/modules/sb/fsw/src/cfe_sb_util.c:264:         * Pad the remaining space with NUL chars,
./cfe/modules/fs/ut-coverage/fs_UT.c:589:    /* Set up remainder of fields, so entry is valid */
./cfe/modules/fs/fsw/src/cfe_fs_api.c:489:                    /* no ext: use remainder of input here - then use default extension for next part */
./cfe/modules/es/ut-coverage/es_UT.c:246: * a main task ID.  A pointer to the App and Task record is output so the
./cfe/modules/es/ut-coverage/es_UT.c:647:            "CFE_APP, /cf/apps/ci.bundle, CI_task_main, CI_APP, 70, 4096, 0x0, 1; "
./cfe/modules/es/ut-coverage/es_UT.c:649:            "CFE_APP, /cf/apps/to.bundle, TO_task_main, TO_APP, 74, 4096, 0x0, 1; !",
./cfe/modules/es/ut-coverage/es_UT.c:684:            "CFE_APP, /cf/apps/ci.bundle, CI_task_main, CI_APP, 70, 4096, 0x0, 1; "
./cfe/modules/es/ut-coverage/es_UT.c:686:            "CFE_APP, /cf/apps/to.bundle, TO_task_main, TO_APP, 74, 4096, 0x0, 1; !",
./cfe/modules/es/ut-coverage/es_UT.c:690:    /* Perform ES main startup with a mutex creation failure */
./cfe/modules/es/ut-coverage/es_UT.c:700:    /* Perform ES main startup with a file open failure */
./cfe/modules/es/ut-coverage/es_UT.c:709:    /* Perform ES main startup with a startup sync failure */
./cfe/modules/es/ut-coverage/es_UT.c:1056:            "0, 0, 0x0, 1; CFE_APP, /cf/apps/ci.bundle, CI_task_main, CI_APP, "
./cfe/modules/es/ut-coverage/es_UT.c:1059:            "TO_task_main, TO_APP, 74, 4096, 0x0, 1; !",
./cfe/modules/es/ut-coverage/es_UT.c:1081:            "CFE_APP, /cf/apps/ci.bundle, CI_task_main, CI_APP, 70, 4096, 0x0, 1; "
./cfe/modules/es/ut-coverage/es_UT.c:1083:            "CFE_APP, /cf/apps/to.bundle, TO_task_main, TO_APP, 74, 4096, 0x0, 1; !",
./cfe/modules/es/ut-coverage/es_UT.c:1645:     * application ID matches the main task ID
./cfe/modules/es/ut-coverage/es_UT.c:1679:     * application ID doesn't match the main task ID
./cfe/modules/es/ut-coverage/es_UT.c:1690:    /* switch the main task association (makes it wrong) */
./cfe/modules/es/ut-coverage/es_UT.c:1711:    /* switch the main task association (makes it wrong) */
./cfe/modules/es/ut-coverage/es_UT.c:1763:     * This is mainly to exercise the conversion of CFE ES task IDs to OSAL task IDs and vice versa.
./cfe/modules/es/ut-coverage/es_UT.c:2242:    /* Test task main process loop with a command pipe error */
./cfe/modules/es/ut-coverage/es_UT.c:2253:    /* Test task main process loop with bad checksum information */
./cfe/modules/es/ut-coverage/es_UT.c:2263:    /* Test successful task main process loop - Power On Reset Path */
./cfe/modules/es/ut-coverage/es_UT.c:2272:    /* Test successful task main process loop - Processor Reset Path */
./cfe/modules/es/ut-coverage/es_UT.c:2281:    /* Test task main process loop with a with an EVS register failure */
./cfe/modules/es/ut-coverage/es_UT.c:2286:    /* Test task main process loop with a SB pipe create failure */
./cfe/modules/es/ut-coverage/es_UT.c:2291:    /* Test task main process loop with a HK packet subscribe failure */
./cfe/modules/es/ut-coverage/es_UT.c:2296:    /* Test task main process loop with a ground command subscribe failure */
./cfe/modules/es/ut-coverage/es_UT.c:2301:    /* Test task main process loop with an init event send failure */
./cfe/modules/es/ut-coverage/es_UT.c:2306:    /* Test task main process loop with version event send failure */
./cfe/modules/es/ut-coverage/es_UT.c:3594:    /* Nominal call 2 - should go through up to the remainder of states, back to IDLE */
./cfe/modules/es/ut-coverage/es_UT.c:3626:    /* This will trigger the OS_write() failure, which should go through up to the remainder of states, back to IDLE */
./cfe/modules/es/ut-coverage/es_UT.c:3656:    /* Confirm that the "CFE_ES_GetPerfLogDumpRemaining" function works.
./cfe/modules/es/ut-coverage/es_UT.c:3666:    UtAssert_True(CFE_ES_GetPerfLogDumpRemaining() == 100, " CFE_ES_GetPerfLogDumpRemaining - Setup Phase");
./cfe/modules/es/ut-coverage/es_UT.c:3669:    UtAssert_True(CFE_ES_GetPerfLogDumpRemaining() == 10, " CFE_ES_GetPerfLogDumpRemaining - Active Phase");
./cfe/modules/es/ut-coverage/es_UT.c:3990:    /* Test deleting a child task using a main task's ID */
./cfe/modules/es/ut-coverage/es_UT.c:3995:              "CFE_ES_DeleteChildTask", "Task ID belongs to a main task");
./cfe/modules/es/ut-coverage/es_UT.c:4045:    /* Test exiting a child task within an app main task */
./cfe/modules/es/ut-coverage/es_UT.c:4051:              "CFE_ES_ExitChildTask", "Cannot call from a cFE application main task");
./cfe/modules/es/ut-coverage/es_UT.c:4951:     * the remaining memory
./cfe/modules/es/ut-coverage/es_UT.c:5224:     * the remaining memory.  Use no mutex in order to get branch path coverage
./cfe/modules/es/ut-coverage/es_UT.h:63:**        main ES startup function
./cfe/modules/es/ut-coverage/es_UT.h:67:**        tests. It then performs a normal ES main startup, which constitutes
./cfe/modules/es/ut-coverage/es_UT.h:80:** \brief Perform tests for non-normal ES main startup and provide coverage
./cfe/modules/es/ut-coverage/es_UT.h:81:**        for remaining functions in cfe_es_start.c
./cfe/modules/es/ut-coverage/es_UT.h:84:**        This function exercises the remaining (error condition) paths for the
./cfe/modules/es/ut-coverage/es_UT.h:85:**        ES main startup that were not covered in TestInit.  The remaining
./cfe/modules/es/eds/cfe_es.xml:575:          <Entry name="RegisteredTasks" type="BASE_TYPES/uint32" shortDescription="Number of Tasks ( main AND child tasks ) registered with ES">
./cfe/modules/es/eds/cfe_es.xml:655:          <Entry name="HeapBytesFree" type="BASE_TYPES/uint32" shortDescription="Number of free bytes remaining in the OS heap">
./cfe/modules/es/eds/cfe_es.xml:660:          <Entry name="HeapBlocksFree" type="BASE_TYPES/uint32" shortDescription="Number of free blocks remaining in the OS heap">
./cfe/modules/es/eds/cfe_es.xml:1865:          This command allows the user to obtain a snapshot of the statistics maintained
./cfe/modules/es/fsw/src/cfe_es_api.c:424:                ** Unlock the ES Shared data before killing the main task
./cfe/modules/es/fsw/src/cfe_es_api.c:490:     * is calling this API, which is expected to be the main
./cfe/modules/es/fsw/src/cfe_es_api.c:500:     * break out of its main loop.  There is no need to take the lock or do any other
./cfe/modules/es/fsw/src/cfe_es_api.c:577:    uint32              WaitRemaining;
./cfe/modules/es/fsw/src/cfe_es_api.c:638:     * This is only dependent on the main (startup) task updating the global variable
./cfe/modules/es/fsw/src/cfe_es_api.c:641:    WaitRemaining = TimeOutMilliseconds;
./cfe/modules/es/fsw/src/cfe_es_api.c:646:        if (WaitRemaining > CFE_PLATFORM_ES_STARTUP_SYNC_POLL_MSEC)
./cfe/modules/es/fsw/src/cfe_es_api.c:650:        else if (WaitRemaining > 0)
./cfe/modules/es/fsw/src/cfe_es_api.c:652:            WaitTime = WaitRemaining;
./cfe/modules/es/fsw/src/cfe_es_api.c:661:        WaitRemaining -= WaitTime;
./cfe/modules/es/fsw/src/cfe_es_api.c:1062:                    /* This is the main task - capture its name and execution count */
./cfe/modules/es/fsw/src/cfe_es_api.c:1532:    ** main task.
./cfe/modules/es/fsw/src/cfe_es_apps.c:593:                               TaskName,                 /* task name matches app name for main task */
./cfe/modules/es/fsw/src/cfe_es_apps.c:735:             * main task info, etc. which is required to start the app now
./cfe/modules/es/fsw/src/cfe_es_apps.c:774:            CFE_ES_StartAppTask(&AppRecPtr->MainTaskId, /* Task ID (output) stored in App Record as main task */
./cfe/modules/es/fsw/src/cfe_es_apps.c:777:                                    AppRecPtr->LoadStatus.InitSymbolAddress, /* Init Symbol is main task entry point */
./cfe/modules/es/fsw/src/cfe_es_apps.c:1381:                /* Store the main task ID at index 0 (swap with whatever was there) */
./cfe/modules/es/fsw/src/cfe_es_apps.c:1417:         * This prevents reallocation of this slot while the remainder
./cfe/modules/es/fsw/src/cfe_es_apps.c:1473:     * Note that the main task is always positioned at index 0 in this list.
./cfe/modules/es/fsw/src/cfe_es_apps.c:1476:     * tasks are deleted first (in any order) and main task is deleted last.
./cfe/modules/es/fsw/src/cfe_es_global.h:191:     * such as maintenance, file writes, and other items.
./cfe/modules/es/fsw/src/cfe_es_task.c:118:        ** Increment the main task execution counter
./cfe/modules/es/fsw/src/cfe_es_task.c:503:     * devoted to maintence duties that do not need to execute on a
./cfe/modules/es/fsw/src/cfe_es_task.c:780:    CFE_ES_Global.TaskData.HkPacket.Payload.PerfDataToWrite  = CFE_ES_GetPerfLogDumpRemaining();
./cfe/modules/es/fsw/src/cfe_es_task.c:1359:        ** Loop through the ES AppTable for main applications
./cfe/modules/es/fsw/src/cfe_es_task.c:1501:        ** Loop through the ES AppTable for main applications
./cfe/modules/es/fsw/src/cfe_es_task.c:1721:         * Fill out the remainder of meta data.
./cfe/modules/es/fsw/src/cfe_es_cds.c:537:    size_t                 RemainSize;
./cfe/modules/es/fsw/src/cfe_es_cds.c:549:        RemainSize = CDS->TotalSize - CDS->Cache.Offset;
./cfe/modules/es/fsw/src/cfe_es_cds.c:550:        if (RemainSize < sizeof(CDS->Cache.Data.Zero))
./cfe/modules/es/fsw/src/cfe_es_cds.c:553:            CDS->Cache.Size = RemainSize;
./cfe/modules/es/fsw/src/cfe_es_perf.h:99: * task.  It will progress through the remainder of the state machine,
./cfe/modules/es/fsw/src/cfe_es_perf.h:116: * Helper function to obtain the progress/remaining items from
./cfe/modules/es/fsw/src/cfe_es_perf.h:127:uint32 CFE_ES_GetPerfLogDumpRemaining(void);
./cfe/modules/es/fsw/src/cfe_es_backgroundtask.c:27:** for various maintenance duties that may take time to execute, such as
./cfe/modules/es/fsw/src/cfe_es_syslog.c:205:            /* In "discard" mode, save as much as possible and discard the remainder of the message
./cfe/modules/es/fsw/src/cfe_es_syslog.c:308:         *  - total remaining (un-copied) size of the syslog data
./cfe/modules/es/fsw/src/cfe_es_perf.c:100: * Function: CFE_ES_GetPerfLogDumpRemaining
./cfe/modules/es/fsw/src/cfe_es_perf.c:106:uint32 CFE_ES_GetPerfLogDumpRemaining(void)
./cfe/modules/es/fsw/src/cfe_es_perf.c:131:         * report the block counter (number remaining) */
./cfe/modules/es/fsw/src/cfe_es_start.c:781:                    ** Start the core app main task
./cfe/modules/es/fsw/src/cfe_es_start.c:907:    uint32              WaitRemaining;
./cfe/modules/es/fsw/src/cfe_es_start.c:912:    WaitRemaining = TimeOutMilliseconds;
./cfe/modules/es/fsw/src/cfe_es_start.c:942:        if (WaitRemaining > CFE_PLATFORM_ES_STARTUP_SYNC_POLL_MSEC)
./cfe/modules/es/fsw/src/cfe_es_start.c:946:        else if (WaitRemaining > 0)
./cfe/modules/es/fsw/src/cfe_es_start.c:948:            WaitTime = WaitRemaining;
./cfe/modules/es/fsw/src/cfe_es_start.c:956:        WaitRemaining -= WaitTime;
./cfe/modules/es/fsw/src/cfe_es_task.h:111: * \brief ES background task main function
./cfe/modules/es/fsw/src/cfe_es_generic_pool.c:201:     * Check if there is enough space remaining in the pool -- the
./cfe/modules/es/fsw/src/cfe_es_generic_pool.c:206:        /* can't fit in remaining mem */
./cfe/modules/es/fsw/src/cfe_es_log.h:255: * output string will be truncated to fit into the remaining space.
./cfe/modules/es/fsw/src/cfe_es_apps.h:73:** This information should remain fairly constant after initial allocation, even
./cfe/modules/es/fsw/src/cfe_es_apps.h:115:** about the main task and exception action.  It is only used for apps, as libraries
./cfe/modules/es/fsw/inc/cfe_es_msg.h:937:**       This command allows the user to obtain a snapshot of the statistics maintained
./cfe/modules/es/fsw/inc/cfe_es_msg.h:1520:                                        \brief Number of Tasks ( main AND child tasks ) registered with ES */
./cfe/modules/es/fsw/inc/cfe_es_msg.h:1556:                                            \brief Number of free bytes remaining in the OS heap */
./cfe/modules/es/fsw/inc/cfe_es_msg.h:1558:                                            \brief Number of free blocks remaining in the OS heap */
./cfe/modules/es/fsw/inc/cfe_es_events.h:132:**  it's main loop, or times out.
./cfe/modules/es/fsw/inc/cfe_es_events.h:164:**  it's main loop, or times out.
./cfe/modules/es/fsw/inc/cfe_es_events.h:197:**  it's main loop, or times out.
./cfe/modules/evs/ut-coverage/evs_UT.h:51:**        initialization and main functions
./cfe/modules/evs/ut-coverage/evs_UT.h:57:**        initialization, and main functions.
./cfe/modules/evs/ut-coverage/evs_UT.c:53:    NULL, /* old message removed - placeholder to maintain indices */
./cfe/modules/evs/fsw/src/cfe_evs.c:101:            /* Initialize remainder of filters as unused */
./cfe/modules/evs/fsw/src/cfe_evs_task.c:643:    /* Copy hk variables that are maintained in the event log */
./cfe/modules/core_api/fsw/inc/cfe_fs_extern_typedefs.h:48: * remains 32-bit aligned without the need for implicit padding bytes.
./cfe/modules/core_api/fsw/inc/cfe_sb_extern_typedefs.h:113: * compatibility with existing usage semantics in apps (mainly switch/case statements)
./cfe/modules/core_api/fsw/inc/cfe_es_api_typedefs.h:77: * All ES task functions (main + child) use the same entry point type.
./cfe/modules/core_api/fsw/inc/cfe_es.h:187:**        cFE main entry point. This is the entry point into the cFE software.
./cfe/modules/core_api/fsw/inc/cfe_es.h:445:**        the calling task. It can be called from cFE Application main tasks, child
./cfe/modules/core_api/fsw/inc/cfe_es.h:446:**        tasks, or cFE Core application main tasks. Normally, the call is not
./cfe/modules/core_api/fsw/inc/cfe_es.h:652:**        maintains for an application ( documented in the CFE_ES_AppInfo_t type )
./cfe/modules/core_api/fsw/inc/cfe_es.h:706:**        information ES maintains for this resource type ( documented in
./cfe/modules/core_api/fsw/inc/cfe_es.h:904:**        this function was called from a cFE Application's main task.
./cfe/modules/core_api/fsw/inc/cfe_es.h:1144:**        The recovery will indicate an error if the data integrity check maintained by the CDS
./cfe/modules/core_api/fsw/inc/cfe_es.h:1384:** \brief Extracts the statistics maintained by the memory pool software
./cfe/modules/core_api/fsw/inc/cfe_es.h:1388:**        maintained by the memory pool software.  These statistics can then be telemetered
./cfe/modules/core_api/fsw/inc/cfe_tbl_api_typedefs.h:122:    bool               Critical;         /**< \brief Flag indicating Table contents are maintained in a CDS */
./cfe/modules/core_api/fsw/inc/cfe_time.h:74:**        or #CFE_MISSION_TIME_CFG_DEFAULT_UTC as true at compile time.  To maintain re-usability
./cfe/modules/core_api/fsw/inc/cfe_time.h:99:**        under all mission operations scenarios.  To maintain re-usability across
./cfe/modules/core_api/fsw/inc/cfe_time.h:128:**        all mission operations scenarios.  If UTC is maintained in flight, it will
./cfe/modules/core_api/fsw/inc/cfe_time.h:129:**        jump backwards occasionally due to leap second adjustments.  To maintain
./cfe/modules/core_api/fsw/inc/cfe_time.h:247:**        teams do not maintain the leap seconds count, preferring to adjust the
./cfe/modules/core_api/fsw/inc/cfe_time.h:632:**        be called from a single thread within each application (typically the apps main thread).
./cfe/modules/core_api/fsw/inc/cfe_time.h:656:**        be called from a single thread within each application (typically the apps main thread).
./cfe/modules/core_api/fsw/inc/cfe_tbl.h:366:** \brief Perform standard operations to maintain a table.
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:47:#define CFE_EVS_FIRST_ONE_STOP   0xFFFF /**< \brief Sends the first event.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:48:#define CFE_EVS_FIRST_TWO_STOP   0xFFFE /**< \brief Sends the first 2 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:49:#define CFE_EVS_FIRST_4_STOP     0xFFFC /**< \brief Sends the first 4 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:50:#define CFE_EVS_FIRST_8_STOP     0xFFF8 /**< \brief Sends the first 8 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:51:#define CFE_EVS_FIRST_16_STOP    0xFFF0 /**< \brief Sends the first 16 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:52:#define CFE_EVS_FIRST_32_STOP    0xFFE0 /**< \brief Sends the first 32 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_evs_api_typedefs.h:53:#define CFE_EVS_FIRST_64_STOP    0xFFC0 /**< \brief Sends the first 64 events.  All remaining messages are filtered. */
./cfe/modules/core_api/fsw/inc/cfe_sb.h:763: *    MsgId values for equality to remain compatible with future versions
./cfe/modules/core_api/fsw/inc/cfe_error.h:361: *  The Application is requesting a CDS Block that is larger than the remaining
./cfe/modules/core_api/fsw/inc/cfe_fs.h:168:** Certain classes of files generally reside in a common directory, mainly
./cfe/modules/cfe_testcase/src/cfe_test.c:37: * Test main function
./cfe/modules/tbl/ut-coverage/tbl_UT.c:231:    /* Test successful table services main entry point execution */
./cfe/modules/tbl/ut-coverage/tbl_UT.c:2579:** Test function for performing standard table maintenance on the
./cfe/modules/tbl/ut-coverage/tbl_UT.c:3238:** Tests for the remaining functions in cfe_tbl_internal.c
./cfe/modules/tbl/ut-coverage/tbl_UT.h:553:** \brief Test function for performing standard table maintenance on the
./cfe/modules/tbl/ut-coverage/tbl_UT.h:558:**        maintenance on the specified table.
./cfe/modules/tbl/ut-coverage/tbl_UT.h:638:** \brief Tests for the remaining functions in cfe_tbl_internal.c
./cfe/modules/tbl/ut-coverage/tbl_UT.h:641:**        This function tests the remaining functions in cfe_tbl_internal.c.
./cfe/modules/tbl/fsw/src/cfe_tbl_task.h:274:**     Structure used to ensure Table Task Global Data is maintained as a single
./cfe/modules/tbl/fsw/src/cfe_tbl_task_cmds.c:742:                /* to maintain the cFE Header standards */
./cfe/modules/tbl/fsw/src/cfe_tbl_task_cmds.c:1120:        /* Unlock now - remainder of data gathering uses ES */
./cfe/modules/tbl/fsw/src/cfe_tbl_task_cmds.c:1243:         * Fill out the remainder of meta data.
./cfe/modules/tbl/fsw/inc/cfe_tbl_msg.h:830:                                                        \brief Spare byte to maintain byte alignment */
./cfe/modules/cfe_assert/src/cfe_assert_runner.c:21:** File: cfe_testrunner_main.c
./cfe/modules/cfe_assert/src/cfe_assert_runner.c:44: * a second or two for apps to all reach their respective main loop(s).
./cfe/modules/cfe_assert/src/cfe_assert_runner.c:179:    /* Use the local status report function for the remainder of tests */
./cfe/modules/cfe_assert/src/cfe_assert_init.c:21:** File: cfe_assert_main.c
./cfe/modules/core_private/ut-stubs/src/ut_support.c:675:     * Remove a remaining "Test_" prefix on the group name.
./cfe/modules/core_private/ut-stubs/inc/ut_support.h:569:**        that is maintained by CFE ES.
./cfe/modules/core_private/fsw/inc/cfe_time_resetvars_typedef.h:39:**  \brief Time related variables that are maintained through a Processor Reset
./cfe/modules/core_private/fsw/inc/cfe_time_resetvars_typedef.h:42:**       The #CFE_TIME_ResetVars_t data structure contains those variables that are maintained
./cfe/modules/core_private/fsw/inc/cfe_time_resetvars_typedef.h:44:**       cFE Time Service to maintain time to the best of its ability after a Processor Reset.
./cfe/modules/time/ut-coverage/time_UT.c:153:** Test task entry point and main process loop
./cfe/modules/time/ut-coverage/time_UT.c:174:** remaining tests)
./cfe/modules/time/ut-coverage/time_UT.h:54:** \brief Test task entry point and main process loop
./cfe/modules/time/ut-coverage/time_UT.h:57:**        This function tests the task entry point and main process loop.
./cfe/modules/time/ut-coverage/time_UT.h:70:**        remaining tests)
./cfe/modules/time/ut-coverage/time_UT.h:74:**        prior to remaining tests).
./cfe/modules/time/eds/cfe_time.xml:657:          FLYWHEEL mode.  Use of FLYWHEEL mode is mainly for debug purposes although
./cfe/modules/time/eds/cfe_time.xml:660:          Service will remain so until receipt of another "set state" command setting the
./cfe/modules/time/eds/cfe_time.xml:719:          the deviation from the time maintained by the Time Server.
./cfe/modules/time/eds/cfe_time.xml:764:          and microseconds that represent the deviation from the time maintained by the Time Server.
./cfe/modules/time/fsw/src/cfe_time_tone.c:141:    ** Remainder of time values are unchanged...
./cfe/modules/time/fsw/src/cfe_time_utils.c:271:    ** Remaining data values used to compute time...
./cfe/modules/time/fsw/src/cfe_time_api.c:645:    ** Convert total number of days into years and remainder days...
./cfe/modules/time/fsw/inc/cfe_time_msg.h:220:**       FLYWHEEL mode.  Use of FLYWHEEL mode is mainly for debug purposes although
./cfe/modules/time/fsw/inc/cfe_time_msg.h:223:**       Service will remain so until receipt of another "set state" command setting the
./cfe/modules/time/fsw/inc/cfe_time_msg.h:274:**       the deviation from the time maintained by the Time Server.
./cfe/modules/time/fsw/inc/cfe_time_msg.h:311:**       and microseconds that represent the deviation from the time maintained by the Time Server.<BR><BR>
./cfe/modules/sbr/ut-coverage/test_cfe_sbr_route_unsorted.c:186:    UtPrintf("Verify remaining set values");
./cfe/modules/sbr/fsw/src/cfe_sbr_map_hash.c:52: * still remaining much smaller than the routing table.  Note the
./cfe/cmake/target/CMakeLists.txt:268:    # The remainder are static libraries that should only be
./cfe/cmake/target/inc/target_config.h:37: * Prototype for the main system entry function implemented in CFE ES
./cfe/cmake/global_functions.cmake:18:# First argument is the file name to write.  All remaining arguments will be
./cfe/cmake/sample_defs/cpu1_cfe_es_startup.scr:11:! 3. Entry Point      -- This is the "main" function for Apps.
./cfe/cmake/sample_defs/cpu1_platform_cfg.h:373:**       By default, Time Servers maintain time using an internal MET which may be a
./cfe/cmake/sample_defs/cpu1_platform_cfg.h:605:**         of it's main loop and call CFE_ES_ExitApp. Once it calls Exit App, then
./cfe/cmake/sample_defs/cpu1_platform_cfg.h:1508:**       determines the size of the Critical Table Registry which is maintained in the Critical
./cfe/cmake/sample_defs/cpu1_platform_cfg.h:1676:**      The CFE "main" thread starts individual tasks for each of the core applications
./cfe/cmake/sample_defs/cpu1_platform_cfg.h:1678:**      next core application can be started, so the main thread waits to ensure that the
./cfe/cmake/sample_defs/sample_mission_cfg.h:241:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:294:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:381:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:397:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:435:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:439:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:454:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:478:**       All CPUs within the same SB domain (mission) and ground tools must share the
./cfe/cmake/sample_defs/sample_mission_cfg.h:483:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:505:**       All CPUs within the same SB domain (mission) and ground tools must share the
./cfe/cmake/sample_defs/sample_mission_cfg.h:510:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:532:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:536:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/sample_mission_cfg.h:552:**       All CPUs within the same SB domain (mission) must share the same definition
./cfe/cmake/sample_defs/sample_mission_cfg.h:556:**       This value should be kept as a multiple of 4, to maintain alignment of
./cfe/cmake/sample_defs/targets.cmake:27:#       the linker at static link time, generally the entry point/main function
./cfe/cmake/cfe-usersguide.doxyfile.in:5:# Start with the main page so document ordering is established
./cfe/cmake/cfe-usersguide.doxyfile.in:6:INPUT                 += @MISSION_SOURCE_DIR@/cfe/docs/src/main.dox
./cfe/cmake/cfe-usersguide.doxyfile.in:15:# Although missions may override these files, for the users guide we are mainly
./cfe/docs/src/cfe_tbl.dox:50:  To understand the methods of maintaining a table, it is important that the terminology be clear.
./cfe/docs/src/cfe_tbl.dox:213:  where the Active image of the table is to be maintained.  Normally, the address is specified by Table
./cfe/docs/src/cfe_tbl.dox:307:  Registry which is also maintained in the Critical Data Store.
./cfe/docs/src/cfe_time.dox:6:  a Time Server responsible for maintaining the master time reference for all remote systems,
./cfe/docs/src/cfe_time.dox:107:  (IERS) maintains the count of leap seconds as a signed whole number that is
./cfe/docs/src/cfe_time.dox:361:  as the server and the remainder configured as clients.  If the target system has
./cfe/docs/src/cfe_time.dox:445:  The remainder of this section pertains only to TIME servers configured to accept
./cfe/docs/src/cfe_time.dox:532:  as the server and the other processors as clients.  The TIME server will maintain the
./cfe/docs/src/cfe_time.dox:547:  cFE TIME will also maintain and report the STCF in a System Time Format structure.
./cfe/docs/src/cfe_time.dox:600:  Use of FLYWHEEL mode is mainly for debug purposes although, in extreme circumstances, it
./cfe/docs/src/cfe_time.dox:602:  commanded into FLYWHEEL mode, the Time  Service will remain so until receipt of another
./cfe/docs/src/cfe_time.dox:677:  The following sections describe the operator's resposibilities for maintaining
./cfe/docs/src/cfe_time.dox:709:  TIME Servers require maintenance by the operations team to ensure the spacecraft is maintaining
./cfe/docs/src/cfe_time.dox:711:  the commands that the operations team can use to help maintain a proper time reference: <BR>
./cfe/docs/src/ddd_main.dox:2:  \mainpage Core Flight Executive Documentation
./cfe/docs/src/main.dox:2:  \mainpage Core Flight Executive Documentation
./cfe/docs/src/main.dox:91:   along with an implementation targeted to the embedded software domain makes it suitable for reuse on any number of
./cfe/docs/src/main.dox:109:   The main long term goal of the cFE is to form the basis for a platform and project
./cfe/docs/src/cfe_evs.dox:334:  EVS maintains information on each registered application and all events registered
./cfe/docs/src/cfe_sb.dox:185:  contains no memory leaks. The value (in bytes) should remain stable under nominal
./cfe/docs/src/cfe_sb.dox:465:  the following event. "CFE_ES:getPoolBuf err:Request won't fit in remaining memory" At this
./cfe/docs/src/cfe_sb.dox:471:  bus was be rejected. The ES memory pool stated that the "…Request won't fit in remaining
./cfe/docs/src/cfe_glossary.dox:48:             has remained unchanged from one time period to another.
./cfe/docs/src/cfe_es.dox:143:        <TD> This is the name of the "main" function for App.
./cfe/docs/src/cfe_es.dox:281:  The ES task maintains a counter for the number of registered
./cfe/docs/src/cfe_es.dox:427:     <LI> <B>Main Task ID</B> - The Task ID assigned to the main task associated with the Application <BR>
./cfe/docs/src/cfe_es.dox:428:     <LI> <B>Main Task Name</B> - The name of the main task associated with the Application <BR>
./cfe/docs/src/cfe_es.dox:429:     <LI> <B>Number of Child Tasks</B> - The number of child tasks spawned by the main task <BR>
./cfe/docs/src/cfe_es.dox:610:  dump the contents of the CDS Registry maintained by the Executive Services into a
./cfe/docs/src/cfe_es.dox:672:  one. The created blocks remain until a reset occurs.
./cfe/docs/cFE Application Developers Guide.md:143:    coding practice and are helpful for code maintenance, reuse, etc.
./cfe/docs/cFE Application Developers Guide.md:254:  | Cyclic Redundancy Check                 | A polynomial based method for checking that a data set has remained unchanged from one time period to another.                                                   |
./cfe/docs/cFE Application Developers Guide.md:519:| fsw/src/sample_app.h                  | Main header file for sample_app. It contains your main global typedef, prototypes, and miscellaneous define. |
./cfe/docs/cFE Application Developers Guide.md:614:that an Application's main task and all of its children tasks are considered
./cfe/docs/cFE Application Developers Guide.md:631:The remaining functions, CFE_ES_DeleteChildTask, CFE_ES_SuspendChildTask
./cfe/docs/cFE Application Developers Guide.md:778:useful method of synchronization between main tasks and child tasks.  As an
./cfe/docs/cFE Application Developers Guide.md:780:implement a kind of handshake between its main task and its child task.
./cfe/docs/cFE Application Developers Guide.md:1269:main execution loop.  Applications can track performance of multiple sections
./cfe/docs/cFE Application Developers Guide.md:1340:communications system. The main objective of the Software Bus is to
./cfe/docs/cFE Application Developers Guide.md:1459:it can process it as needed. The SB Message remains accessible to the
./cfe/docs/cFE Application Developers Guide.md:1736:The Message module supports two main types of headers: command headers and telemetry
./cfe/docs/cFE Application Developers Guide.md:1882:main execution loop.  An example of this is shown below.
./cfe/docs/cFE Application Developers Guide.md:2048:4. Applications should maintain a command counter and a command error counter
./cfe/docs/cFE Application Developers Guide.md:2063:application code during development, maintenance, and testing. Note that
./cfe/docs/cFE Application Developers Guide.md:2065:main task. Event Messages identify the Application not the Child Task
./cfe/docs/cFE Application Developers Guide.md:2358:maintenance. One should word the messages in a way that is meaningful to
./cfe/docs/cFE Application Developers Guide.md:2383:   complete, all remaining debug "printf" statements should be either
./cfe/docs/cFE Application Developers Guide.md:3066:Time is maintained and accessed through the cFE Time Service (TIME) API.
./cfe/docs/cFE Application Developers Guide.md:3097:Time (MET) is maintained in a hardware register and is a running count
./cfe/docs/cFE Application Developers Guide.md:3130:resulting time is UTC. In the past the FSW typically maintained UTC by
./cfe/docs/cFE Application Developers Guide.md:3143:- Mission Epoch: An absolute time reference that remains fixed.
./cfe/docs/cFE Application Developers Guide.md:3146:  epoch and is maintained by an on-board oscillator. This is the raw
./cfe/docs/cFE Application Developers Guide.md:3202:disconnected from one another, they each do their best to maintain the
./cfe/docs/cFS_IdentifierNamingConvention.md:151:mainly to avoid command identifiers which are a mixture of `CounterReset` and `ResetCounter`, etc.
Binary file ./cfe/docs/CFS Tlm and Cmd Mnemonic Naming Convention.doc matches
./cfe/docs/cFE_FunctionalRequirements.csv:34:ES: Delete Application,cES1006,"Upon receipt of a Command, the cFE shall delete the Command specified Application including all child tasks.",Need to be able to stop the execution of an Application and remove its System Resources.  The delete will clean-up the application's main task and all of its child tasks.  Note: other cFE components are required to have cleanup routines that ES calls.
./cfe/docs/cFE_FunctionalRequirements.csv:58:ES: System Log,cES1014,The cFE shall maintain an Executive Services System Log which contains a series of ASCII text strings describing significant events or errors.,"Examples of ES System Log information includes: ""Created new cFE Application:  StoredCommand.app"" or ""Could Not Create OS Queue"" or ""File not found error: /eebank1/StoredCommand.app"" This requirement states that the cFE needs to maintain this information.  There is a separate requirement for the creation of a file to transfer the information to the ground. Note that the information can also be obtained with a raw memory read."
./cfe/docs/cFE_FunctionalRequirements.csv:67:ES: Exception and Reset Log,cES1017,"The cFE shall maintain an Executive Services Exception and Reset Log which will log critical system data for exceptions and resets including:
./cfe/docs/cFE_FunctionalRequirements.csv:76:ES: Analyzer Log,cES1021,The cFE shall maintain an Executive Services Logic Analyzer Capture Log for capturing application specified timestamps and events for off-line performance analysis.,The Logic Analyzer Capture Log is used along with a performance log API to allow the cFE and cFE Applications to save performance data that can be downloaded.
./cfe/docs/cFE_FunctionalRequirements.csv:104:ES: Delete Application,cES1309,"Upon receipt of a Request, the cFE shall delete the specified Application including all child tasks.",Need to be able to stop the execution of an Application and remove its System Resources.  The delete will clean-up the application's main task and all of its child tasks.  Note: other cFE components are required to have cleanup routines that ES calls.
./cfe/docs/cFE_FunctionalRequirements.csv:110:ES: Create Child Task,cES1311,"Upon receipt of a Request, the cFE shall create the specified cFE Child Task within the cFE Application that owns the task and begin execution of the task.",Each cFE Application's main task has the capability to create and start one or more child tasks.
./cfe/docs/cFE_FunctionalRequirements.csv:112:ES: Create Child Task - Invalid From Child Task,cES1311.2,"In the event a child task attempts to create another child task, the cFE shall record the error in the System Log, and return an error code.",Only the cFE Application's main task can create a child task. This prevents confusion with parent/child task relationships and the allocation/deallocation of resources.
./cfe/docs/cFE_FunctionalRequirements.csv:146:ES: Run Loop,cES1333,Upon receipt of a Request the cFE shall process application execution status requests and increment the execution counter.,"Supports application management, and indication of main application loop aliveness."
./cfe/docs/cFE_FunctionalRequirements.csv:222:- Application Binary Filter Counters (one per registered Event ID)","Visibility of Application information is essential for FSW diagnostics, testing and maintenance."
./cfe/docs/cFE_FunctionalRequirements.csv:234:EVS: Write Local Event Log To File,cEVS3015,"_(OPTIONAL)_ Upon receipt of Command, the cFE shall write the contents of the Local Event Log to the Command specified file.",Allows for ground view of the log.  Local Event Log is not intended for operation playback.  The main purpose of the Local Event Log is for ground testing.  Ground operators may view the data file for playing back stored events.
./cfe/docs/cFE_FunctionalRequirements.csv:280:EVS: Create Message - Long Format - Truncation,cEVS3103.4.1,"If the Event Data is greater than the `<MISSION_DEFINED>` maximum Event Data, the cFE shall truncate the Event Message with a string-termination character and increment the Message Truncation Counter.","It's important to know if data is lost, but it doesn't need to be maintained on a per-Event ID basis, therefore a single counter is used.  A platform-defined length was considered but this prevents application reuse unless a minimum length is specified."
./cfe/docs/cFE_FunctionalRequirements.csv:294:EVS: Message Port Routing,cEVS3109,"For each created Event Message, the cFE shall route the Event Message, formatted as an ASCII text string, to each enabled Event Message Output Port.",Debug ports are very useful for FSW development and maintenance.
./cfe/docs/cFE_FunctionalRequirements.csv:313:SB: Statistics Message,cSB4002,"Upon receipt of a Command, the cFE shall send an SB Message containing the SB statistics.","Visibility of the SB statistics is essential for FSW diagnostics, testing, and maintenance."
./cfe/docs/cFE_FunctionalRequirements.csv:314:SB: Save Routing To File,cSB4003,"Upon receipt of a Command, the cFE shall save the SB routing information to the Command specified file.","Visibility of the SB routing information is essential for FSW diagnostics, testing, and maintenance."
./cfe/docs/cFE_FunctionalRequirements.csv:316:SB: Control Message Route To Pipe,cSB4004,"Upon receipt of a Command, the cFE shall enable or disable routing the command specified message to the command specified pipe.","Supports testing and maintenance. In testing, it may be desirable to enable/disable routing a message to a diagnostic application."
./cfe/docs/cFE_FunctionalRequirements.csv:342:SB: Send Message - Pipe Overflow,cSB4305.3,"If routing a Message to an Application's Pipe results in a Pipe Overflow, the cFE shall abort the send to that pipe, issue an event, and continue sending to the remaining pipes.",The ground needs to know if a message cannot be routed to its destination. A Pipe Overflow occurs when the SB attempts to write to a Pipe that is completely full of SB messages. The number of messages a Pipe is capable of storing is defined by a platform configuration parameter.
./cfe/docs/cFE_FunctionalRequirements.csv:343:SB: Send Message - Exceed Message ID To Pipe Limit,cSB4305.4,"If routing a Message to an Application's Pipe would exceed the MsgId-to-Pipe Limit, the cFE shall abort the send to that pipe, issue an event, and continue sending to the remaining pipes.",The ground needs to know if a message cannot be routed to its destination. The MsgId-to-Pipe Limit is exceeded when the SB attempts to write to a Pipe that contains the maximum number of messages of a particular Message Id.
./cfe/docs/cFE_FunctionalRequirements.csv:466:- Flag indicating if the table is maintained in the Critical Data Store",Applications such as Checksum need to obtain info such as size of the table.    The API is a more generic solution.
./cfe/docs/cFE_FunctionalRequirements.csv:480:- Flag the update notification for other applications",Capability to request cFE to perform maintenance on a table that has been modified by an application.
./cfe/docs/cFE_FunctionalRequirements.csv:518:TIME: Add to Source Time,cTIME2020,"Upon receipt of a Command, the cFE shall adjust timekeeping by adding the provided delta time.","Capability to adjust timekeeping independent of Tone and SCTF.  Used to tune a system given Tone, 1Hz, or MET external dependencies.  Timekeeping here remains abstract since it's dependent on configuration and mode governed by other requirements.  Delta time persists until removed (independent of other external updates)."
./cfe/docs/cFE_FunctionalRequirements.csv:519:TIME: Subtract From Source Time,cTIME2021,"Upon receipt of a Command, the cFE shall adjust timekeeping by subtracting the provided delta time.","Capability to adjust timekeeping independent of Tone and SCTF. Used to tune a system given Tone, 1Hz, or MET external dependencies. Timekeeping here remains abstract since it's dependent on configuration and mode governed by other requirements. Delta time persists until removed (independent of other external updates)."
./cfe/.github/workflows/static-analysis.yml:7:      - main
./cfe/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./cfe/.github/workflows/format-check.yml:20:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./cfe/.github/workflows/codeql-build.yml:54:          config-file: nasa/cFS/.github/codeql/codeql-security.yml@main
./cfe/.github/workflows/codeql-build.yml:103:          config-file: nasa/cFS/.github/codeql/codeql-coding-standard.yml@main
./cfe/README.md:118:- Removes `PspConfig` member from the `GLOBAL_CONFIGDATA` object. Updates the only remaining reference to this object inside the CFE_PSP_VERSION and uses the new Version API instead. Updates the OSAL version print to use the version API call and CFE uses the macro directly.
./cfe/README.md:142:- Replaces remaining `CFE_ES_ERR_BUFFER` with `CFE_ES_BAD_ARGUMENT` for when functions receive an invalid null-pointer argument. Adds null pointer checks in `cfe_es_api.c`.
./cfe/README.md:156:- Adds CONTRIBUING.md that links to the main cFS contributing guide.
./cfe/README.md:270:- Enables projects that have OSs with different limits to maintain a standard cmd/tlm and have unit tests pass.
./cfe/README.md:325:- Adds flags parameter to calls to `OS_ModuleLoad()`. Initially just pass 0 (GLOBAL) to maintain old behavior.
./cfe/README.md:377:  - IDs can be put into commands/telemetry and maintain a more consistent format with consistent alignment requirements.
./cfe/README.md:420:- In the next major CFE release, this code will be no longer supported at all. It should be removed early in the cycle to avoid needing to maintain this compatibility code.
./cfe/README.md:442:- Unit tests added from within unit tests will not execute, replaced this pattern with direct calls to the main subtest setup routine.
./cfe/README.md:498:- Both the main task and the child task(s) are successfully deleted and restarted after the exception occurs.
./cfe/SECURITY.md:13:**Disclaimer: nasa/cFE is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/cFE/blob/main/LICENSE).**
./cfe/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of cFE in Github Actions. 
./cfe/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./cfe/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./psp/cmake/Modules/Platform/RTEMS.cmake:50:# RTEMS uses "Init" rather than "main" as its entry point
./psp/.github/workflows/static-analysis.yml:7:      - main
./psp/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./psp/.github/workflows/format-check.yml:7:      - main
./psp/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./psp/unit-test-coverage/mcp750-vxworks/src/coveragetest-cfe-psp-start.c:64:    /* Install a hook function to grab the start type parameters from the system main call */
./psp/unit-test-coverage/ut-stubs/src/cfe-configdata-stubs.c:53: * Stub for the main system entry function implemented in CFE ES
./psp/unit-test-coverage/ut-stubs/inc/PCS_cfe_configdata.h:17: * Stub for the main system entry function implemented in CFE ES
./psp/unit-test-coverage/shared/src/coveragetest-cfe-psp-exceptionstorage.c:160:    /* Fill the remainder of entries    */
./psp/README.md:40:- Adds a contributing guide that links to the main cFS contributing guide.
./psp/SECURITY.md:13:**Disclaimer: nasa/PSP is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/PSP/blob/main/LICENSE).**
./psp/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of PSP in Github Actions. 
./psp/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./psp/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./psp/fsw/mcp750-vxworks/src/cfe_psp_start.c:25:**   cFE PSP main entry point.
./psp/fsw/mcp750-vxworks/src/cfe_psp_exception.c:125:         * This is because the remainder of exception processing might be done
./psp/fsw/pc-rtems/src/cfe_psp_start.c:25:**   cFE BSP main entry point.
./psp/fsw/pc-linux/src/cfe_psp_support.c:93:     * This should cause the original thread (main task) to wake up
./psp/fsw/pc-linux/src/cfe_psp_start.c:25:**   cFE BSP main entry point.
./psp/fsw/pc-linux/src/cfe_psp_start.c:198:**  Function:  main()
./psp/fsw/pc-linux/src/cfe_psp_start.c:426:     * Now that all main tasks are created,
./psp/fsw/pc-linux/src/cfe_psp_memory.c:727:     * will remain in the shm structure and it can be detected at startup.
./psp/fsw/pc-linux/src/cfe_psp_exception.c:109:     * notify the main (idle) thread that an interesting event occurred.
./psp/fsw/pc-linux/src/cfe_psp_exception.c:273:     * maintain the default signal handler for the SIGILL/SIGBUS/SIGSEGV which will
./psp/fsw/pc-linux/inc/cfe_psp_config.h:103: * This is the main/initial thread that runs early init,
./psp/fsw/shared/src/cfe_psp_memrange.c:28:**       The memory range is a table of valid memory address ranges maintained by the cFE.
./psp/fsw/shared/inc/cfe_psp_memory.h:109: * but the local maps remain usable until the process ends.
./psp/fsw/inc/cfe_psp.h:172:** entrypoint of the flight software ( i.e. the cFE main entry point ).
./psp/fsw/inc/cfe_psp.h:188: * \note This should refer to the same time domain as CFE_PSP_Get_Timebase(),
./sample_defs/cpu1_cfe_es_startup.scr:11:! 3. Entry Point      -- This is the "main" function for Apps.
./sample_defs/cpu1_platform_cfg.h:373:**       By default, Time Servers maintain time using an internal MET which may be a
./sample_defs/cpu1_platform_cfg.h:605:**         of it's main loop and call CFE_ES_ExitApp. Once it calls Exit App, then
./sample_defs/cpu1_platform_cfg.h:1508:**       determines the size of the Critical Table Registry which is maintained in the Critical
./sample_defs/cpu1_platform_cfg.h:1676:**      The CFE "main" thread starts individual tasks for each of the core applications
./sample_defs/cpu1_platform_cfg.h:1678:**      next core application can be started, so the main thread waits to ensure that the
./sample_defs/sample_mission_cfg.h:241:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:294:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:381:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:397:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:435:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:439:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:454:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:478:**       All CPUs within the same SB domain (mission) and ground tools must share the
./sample_defs/sample_mission_cfg.h:483:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:505:**       All CPUs within the same SB domain (mission) and ground tools must share the
./sample_defs/sample_mission_cfg.h:510:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:532:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:536:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/sample_mission_cfg.h:552:**       All CPUs within the same SB domain (mission) must share the same definition
./sample_defs/sample_mission_cfg.h:556:**       This value should be kept as a multiple of 4, to maintain alignment of
./sample_defs/targets.cmake:27:#       the linker at static link time, generally the entry point/main function
./.git/modules/apps/ci_lab/config:10:[branch "main"]
./.git/modules/apps/ci_lab/config:12:	merge = refs/heads/main
./.git/modules/apps/ci_lab/packed-refs:4:30621672863e99bf2d43488e566d60784bb4e715 refs/remotes/origin/main
./.git/modules/apps/ci_lab/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/apps/ci_lab/logs/HEAD:2:30621672863e99bf2d43488e566d60784bb4e715 30621672863e99bf2d43488e566d60784bb4e715 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 30621672863e99bf2d43488e566d60784bb4e715
./.git/modules/apps/sch_lab/config:10:[branch "main"]
./.git/modules/apps/sch_lab/config:12:	merge = refs/heads/main
./.git/modules/apps/sch_lab/packed-refs:4:80c7197f84c582934b4f9de071bf332cfb8867ab refs/remotes/origin/main
./.git/modules/apps/sch_lab/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/apps/sch_lab/logs/HEAD:2:80c7197f84c582934b4f9de071bf332cfb8867ab 80c7197f84c582934b4f9de071bf332cfb8867ab Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 80c7197f84c582934b4f9de071bf332cfb8867ab
./.git/modules/apps/sample_app/config:10:[branch "main"]
./.git/modules/apps/sample_app/config:12:	merge = refs/heads/main
./.git/modules/apps/sample_app/packed-refs:4:1c32ed48ca358a3fdd55f1bdc9ae0dda61a4f4f7 refs/remotes/origin/main
./.git/modules/apps/sample_app/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/apps/sample_app/logs/HEAD:2:1c32ed48ca358a3fdd55f1bdc9ae0dda61a4f4f7 1c32ed48ca358a3fdd55f1bdc9ae0dda61a4f4f7 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 1c32ed48ca358a3fdd55f1bdc9ae0dda61a4f4f7
./.git/modules/apps/sample_lib/config:10:[branch "main"]
./.git/modules/apps/sample_lib/config:12:	merge = refs/heads/main
./.git/modules/apps/sample_lib/packed-refs:4:12c82b58595fe92dad2f110bf1996dc6832c52b9 refs/remotes/origin/main
./.git/modules/apps/sample_lib/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/apps/sample_lib/logs/HEAD:2:12c82b58595fe92dad2f110bf1996dc6832c52b9 12c82b58595fe92dad2f110bf1996dc6832c52b9 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 12c82b58595fe92dad2f110bf1996dc6832c52b9
./.git/modules/apps/to_lab/config:10:[branch "main"]
./.git/modules/apps/to_lab/config:12:	merge = refs/heads/main
./.git/modules/apps/to_lab/packed-refs:4:17e4fccf6658a82af01e7b6a03fdca48cfd8c81a refs/remotes/origin/main
./.git/modules/apps/to_lab/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/apps/to_lab/logs/HEAD:2:17e4fccf6658a82af01e7b6a03fdca48cfd8c81a 17e4fccf6658a82af01e7b6a03fdca48cfd8c81a Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 17e4fccf6658a82af01e7b6a03fdca48cfd8c81a
./.git/modules/cfe/config:10:[branch "main"]
./.git/modules/cfe/config:12:	merge = refs/heads/main
./.git/modules/cfe/packed-refs:5:a16c78e1853c9b46ce5d1efae882ea5bf3a170cf refs/remotes/origin/main
./.git/modules/cfe/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/cfe/logs/HEAD:2:a16c78e1853c9b46ce5d1efae882ea5bf3a170cf a16c78e1853c9b46ce5d1efae882ea5bf3a170cf Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to a16c78e1853c9b46ce5d1efae882ea5bf3a170cf
Binary file ./.git/modules/cfe/index matches
./.git/modules/psp/config:10:[branch "main"]
./.git/modules/psp/config:12:	merge = refs/heads/main
./.git/modules/psp/packed-refs:5:efef92127a4f26945ad6cb256dd7a0a17b9b3568 refs/remotes/origin/main
./.git/modules/psp/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/psp/logs/HEAD:2:efef92127a4f26945ad6cb256dd7a0a17b9b3568 efef92127a4f26945ad6cb256dd7a0a17b9b3568 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to efef92127a4f26945ad6cb256dd7a0a17b9b3568
./.git/modules/tools/elf2cfetbl/config:10:[branch "main"]
./.git/modules/tools/elf2cfetbl/config:12:	merge = refs/heads/main
./.git/modules/tools/elf2cfetbl/packed-refs:4:858a176f05db108bc985613309481214df076e95 refs/remotes/origin/main
./.git/modules/tools/elf2cfetbl/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/tools/elf2cfetbl/logs/HEAD:2:858a176f05db108bc985613309481214df076e95 858a176f05db108bc985613309481214df076e95 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 858a176f05db108bc985613309481214df076e95
./.git/modules/tools/cFS-GroundSystem/config:10:[branch "main"]
./.git/modules/tools/cFS-GroundSystem/config:12:	merge = refs/heads/main
./.git/modules/tools/cFS-GroundSystem/packed-refs:4:24f625b6610f1f2461244111b6e973b63a710dbe refs/remotes/origin/main
./.git/modules/tools/cFS-GroundSystem/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/tools/cFS-GroundSystem/logs/HEAD:2:24f625b6610f1f2461244111b6e973b63a710dbe 24f625b6610f1f2461244111b6e973b63a710dbe Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 24f625b6610f1f2461244111b6e973b63a710dbe
Binary file ./.git/modules/tools/cFS-GroundSystem/index matches
./.git/modules/tools/tblCRCTool/config:10:[branch "main"]
./.git/modules/tools/tblCRCTool/config:12:	merge = refs/heads/main
./.git/modules/tools/tblCRCTool/packed-refs:4:9761ab51264ee6bff859a2e3a7adace67fa27328 refs/remotes/origin/main
./.git/modules/tools/tblCRCTool/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/tools/tblCRCTool/logs/HEAD:2:9761ab51264ee6bff859a2e3a7adace67fa27328 9761ab51264ee6bff859a2e3a7adace67fa27328 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to 9761ab51264ee6bff859a2e3a7adace67fa27328
./.git/modules/osal/config:10:[branch "main"]
./.git/modules/osal/config:12:	merge = refs/heads/main
./.git/modules/osal/packed-refs:4:c540688551bdaffd4f150b0edf51a1bc3c175d25 refs/remotes/origin/main
./.git/modules/osal/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/modules/osal/logs/HEAD:2:c540688551bdaffd4f150b0edf51a1bc3c175d25 c540688551bdaffd4f150b0edf51a1bc3c175d25 Ian Peitzsch <irpeitzsch@gmail.com> 1623766512 -0400	checkout: moving from main to c540688551bdaffd4f150b0edf51a1bc3c175d25
Binary file ./.git/modules/osal/index matches
./.git/config:9:[branch "main"]
./.git/config:11:	merge = refs/heads/main
./.git/packed-refs:9:fb2968df54d5cc49173c48894aea6f2a670f3716 refs/remotes/origin/main
./.git/refs/remotes/origin/HEAD:1:ref: refs/remotes/origin/main
./.git/HEAD:1:ref: refs/heads/main
./tools/elf2cfetbl/elf2cfetbl.c:609:int main(int argc, char *argv[])
./tools/elf2cfetbl/elf2cfetbl.c:1629:        printf("Experienced error attempting to read remaining sELF Header from file '%s'\n", SrcFilename);
./tools/elf2cfetbl/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./tools/elf2cfetbl/.github/workflows/static-analysis.yml:7:      - main
./tools/elf2cfetbl/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./tools/elf2cfetbl/.github/workflows/format-check.yml:7:      - main
./tools/elf2cfetbl/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./tools/elf2cfetbl/.github/workflows/codeql-build.yml:6:      - main
./tools/elf2cfetbl/SECURITY.md:13:**Disclaimer: nasa/elf2cfetbl is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/elf2cfetbl/blob/main/LICENSE).**
./tools/elf2cfetbl/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of elf2cfetbl in Github Actions. 
./tools/elf2cfetbl/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./tools/elf2cfetbl/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./tools/cFS-GroundSystem/TlmUDPSender.py:32:if __name__ == "__main__":
./tools/cFS-GroundSystem/RoutingService.py:39:    # Signal to update the spacecraft combo box (list) on main window GUI
./tools/cFS-GroundSystem/GroundSystem.py:46:# CFS Ground System: Setup and manage the main window
./tools/cFS-GroundSystem/GroundSystem.py:189:def main():
./tools/cFS-GroundSystem/GroundSystem.py:197:    # Init main window
./tools/cFS-GroundSystem/GroundSystem.py:211:if __name__ == "__main__":
./tools/cFS-GroundSystem/GroundSystem.py:212:   main() 
./tools/cFS-GroundSystem/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./tools/cFS-GroundSystem/.github/workflows/static-analysis.yml:7:      - main
./tools/cFS-GroundSystem/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./tools/cFS-GroundSystem/.github/workflows/format-check.yml:7:      - main
./tools/cFS-GroundSystem/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./tools/cFS-GroundSystem/.github/workflows/codeql-build.yml:6:      - main
./tools/cFS-GroundSystem/README.md:24:- Adds a contributing guide that links to the main cFS contributing guide.
./tools/cFS-GroundSystem/Subsystems/Commands-Telemetry.md:8:Start the telemetry system using the Ground System's main window.
./tools/cFS-GroundSystem/Subsystems/Commands-Telemetry.md:77:Start the command system using the Ground System's main window.
./tools/cFS-GroundSystem/Subsystems/tlmGUI/TelemetrySystem.py:169:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/tlmGUI/TelemetrySystem.py:220:    # Mark the remaining values as invalid
./tools/cFS-GroundSystem/Subsystems/tlmGUI/EventMessage.py:166:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/tlmGUI/GenericTelemetry.py:158:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdGui/quick-buttons.txt:5:# on the Command System main page.
./tools/cFS-GroundSystem/Subsystems/cmdGui/Parameter.py:83:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdGui/HTMLDocsParser.py:84:if __name__ == '__main__':
Binary file ./tools/cFS-GroundSystem/Subsystems/cmdGui/__pycache__/HTMLDocsParser.cpython-36.pyc matches
./tools/cFS-GroundSystem/Subsystems/cmdGui/CHeaderParser.py:31:#	__main__ - significant changes made to main code
./tools/cFS-GroundSystem/Subsystems/cmdGui/CHeaderParser.py:34:#		- preserved pickle utility so the rest of the ground system remains
./tools/cFS-GroundSystem/Subsystems/cmdGui/CHeaderParser.py:115:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdGui/ParameterFiles/struct_c_f_e___t_b_l___info__t:46:aS'Most recently calculated CRC by TBL services on table contents. CFE_TIME_SysTime_t TimeOfLastUpdate Time when Table was last updated. boolean TableLoadedOnce Flag indicating whether table has been loaded once or not. boolean DumpOnly Flag indicating Table is NOT to be loaded. boolean DblBuffered Flag indicating Table has a dedicated inactive buffer. boolean UserDefAddr Flag indicating Table address was defined by Owner Application. boolean Critical Flag indicating Table contents are maintained in a CDS.'
./tools/cFS-GroundSystem/Subsystems/cmdGui/ParameterFiles/struct_c_f_e___t_b_l___tbl_reg_packet__t:64:aS'Spare byte to maintain byte alignment.'
./tools/cFS-GroundSystem/Subsystems/cmdGui/ParameterFiles/struct_c_f_e___e_s___hk_packet__t:237:aS'Number of Tasks ( main AND child tasks ) registered with ES.'
./tools/cFS-GroundSystem/Subsystems/cmdGui/ParameterFiles/struct_c_f_e___e_s___hk_packet__t:269:aS'Number of free bytes remaining in the OS heap.'
./tools/cFS-GroundSystem/Subsystems/cmdGui/ParameterFiles/struct_c_f_e___e_s___hk_packet__t:271:aS'Number of free blocks remaining in the OS heap.'
./tools/cFS-GroundSystem/Subsystems/cmdGui/CommandSystem.py:121:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdGui/CommandSystem.py:165:    # Mark the remaining values as invalid
./tools/cFS-GroundSystem/Subsystems/cmdGui/CommandParser.py:58:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdGui/UdpCommands.py:124:if __name__ == '__main__':
./tools/cFS-GroundSystem/Subsystems/cmdUtil/cmdUtil.c:413:int main(int argc, char *argv[])
Binary file ./tools/cFS-GroundSystem/Subsystems/cmdUtil/cmdUtil matches
./tools/cFS-GroundSystem/TlmMQRecv.py:29:def main():
./tools/cFS-GroundSystem/TlmMQRecv.py:30:    """ main method """
./tools/cFS-GroundSystem/TlmMQRecv.py:51:if __name__ == "__main__":
./tools/cFS-GroundSystem/TlmMQRecv.py:52:    main()
./tools/cFS-GroundSystem/SECURITY.md:13:**Disclaimer: nasa/cFS-GroundSystem is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/cFS-GroundSystem/blob/main/LICENSE).**
./tools/cFS-GroundSystem/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of cFS-GroundSystem in Github Actions. 
./tools/cFS-GroundSystem/Guide-GroundSystem.md:5:The GroundSystem directory contains the new Ground System project for the cFS, that incorporates the main window to launch commands and telemetry systems, and other utilities like FDL/FUL and FT managers to send and receive files. The main window runs alongside the Routing Service (`RoutingService.py`). The Routing Service handles all incoming data and publishes (PUB/SUB) the data to specific ZeroMQ channels so that the different ground system utilities can receive (subscribe) only the desired data.
./tools/cFS-GroundSystem/Guide-GroundSystem.md:9:The Ground System contains the main window that lets you launch the different utilities.
./tools/cFS-GroundSystem/Guide-GroundSystem.md:13:- click the "Start Command System" button from the main window,
./tools/cFS-GroundSystem/Guide-GroundSystem.md:40:The historically included instructions for running on macOS or CentOS are included at the bottom of this document for reference. Please note that instructions have not been maintained. Welcoming instruction contributions if any of these are your platform of choice.
./tools/cFS-GroundSystem/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./tools/cFS-GroundSystem/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./tools/cFS-GroundSystem/setup.py:11:                'cFS-GroundSystem=GroundSystem:main'
./tools/tblCRCTool/cfe_ts_crc.c:104:int main(int argc, char **argv)
./tools/tblCRCTool/.github/workflows/static-analysis.yml:3:# Run on main push and pull requests
./tools/tblCRCTool/.github/workflows/static-analysis.yml:7:      - main
./tools/tblCRCTool/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./tools/tblCRCTool/.github/workflows/format-check.yml:7:      - main
./tools/tblCRCTool/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./tools/tblCRCTool/.github/workflows/codeql-build.yml:6:      - main
./tools/tblCRCTool/SECURITY.md:13:**Disclaimer: nasa/tblCRCTool is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/tblCRCTool/blob/main/LICENSE).**
./tools/tblCRCTool/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of tblCRCTool in Github Actions. 
./tools/tblCRCTool/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./tools/tblCRCTool/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./.github/ISSUE_TEMPLATE/bug_report.md:12:* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
./.github/ISSUE_TEMPLATE/feature_request.md:12:* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
./.github/ISSUE_TEMPLATE/feature_request.md:13:* [ ] I reviewed the [cFS README.md file](https://github.com/nasa/cFS/blob/main/README.md) to see if the feature is in the major future work.
./.github/codeql/codeql-coding-standard.yml:7:    uses: github/codeql/cpp/ql/src/JPL_C@main
./.github/codeql/codeql-coding-standard.yml:9:    uses: github/codeql/cpp/ql/src/jsf/4.20 Unions and Bit Fields/AV Rule 153.ql@main
./.github/codeql/codeql-coding-standard.yml:11:    uses: github/codeql/cpp/ql/src/jsf/4.21 Operators/AV Rule 168.ql@main
./.github/codeql/codeql-coding-standard.yml:13:    uses: github/codeql/cpp/ql/src/jsf/4.25 Expressions/AV Rule 202.ql@main
./.github/codeql/codeql-coding-standard.yml:15:    uses: github/codeql/cpp/ql/src/jsf/4.21 Operators/AV Rule 165.ql@main
./.github/codeql/codeql-coding-standard.yml:17:    uses: github/codeql/cpp/ql/src/jsf/4.21 Operators/AV Rule 165.ql@main
./.github/codeql/codeql-coding-standard.yml:19:    uses: github/codeql/cpp/ql/src/jsf/4.22 Pointers and References/AV Rule 173.ql@main
./.github/pull_request_template.md:3:* [ ] I reviewed the [Contributing Guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md).
./.github/workflows/build-documentation.yml:3:# Run every time a new commit pushed to main or for pull requests
./.github/workflows/build-documentation.yml:132:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/build-documentation.yml:137:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/build-documentation.yml:148:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/build-documentation.yml:217:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/build-documentation.yml:222:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/build-documentation.yml:232:        if: ${{ github.event_name == 'push' && contains(github.ref, 'main')}}
./.github/workflows/codeql-build.yml:7:      - main
./osal/CMakeLists.txt:9:#         osal   : The main library containing the OSAL binary code
./osal/CMakeLists.txt:13:#                  specific entry point function (e.g. main) and the
./osal/osconfig.h.in:206:  * console device, and any other future maintenance task.
./osal/osconfig.h.in:216:  * console device, and any other future maintenance task.
./osal/ut_assert/README.txt:29:development and maintenance of unit tests is critical to the success of the FSRL. 
./osal/ut_assert/README.txt:31:maintained in a cost effective manner. The unit test framework relieves developers 
./osal/ut_assert/README.txt:33:look-and-feel that helps test maintenance. These tools implement an assertion-based 
./osal/ut_assert/README.txt:59:to implement and maintain the unit test framework. Therefore by developing our own 
./osal/ut_assert/README.txt:70:maintenance of unit tests. Unit test maintenance has proven to be a difficult task.
./osal/ut_assert/inc/utstubs.h:199: *      is false then the DataBuffer pointer is used directly, and must remain valid for the duration
./osal/src/bsp/generic-linux/src/bsp_start.c:25: *   OSAL BSP main entry point.
./osal/src/bsp/generic-linux/src/bsp_start.c:187:**  Function:  main()
./osal/src/bsp/generic-linux/src/bsp_start.c:199:int main(int argc, char *argv[])
./osal/src/bsp/generic-vxworks/src/bsp_start.c:25: *  OSAL main entry point.
./osal/src/bsp/pc-rtems/src/bsp_start.c:25: *   OSAL BSP main entry point.
./osal/src/bsp/pc-rtems/src/bsp_start.c:311:             * this basically just means the main task exited */
./osal/src/os/shared/src/osapi-idmap.c:520:             * table can be unlocked while the remainder of the create/delete process
./osal/src/os/shared/src/osapi-idmap.c:523:             * For OS_LOCK_MODE_GLOBAL the global lock should be maintained and
./osal/src/os/shared/src/osapi-idmap.c:1176: *  returns: OS_SUCCESS if a NEW object was allocated and the table remains locked.
./osal/src/os/shared/src/osapi-idmap.c:1178: *  IMPORTANT: The global table is remains in a locked state if this returns OS_SUCCESS,
./osal/src/os/shared/src/osapi-common.c:260:     * This should delete any remaining user-created objects/tasks
./osal/src/os/shared/src/osapi-common.c:385:        /* Then try to delete all other remaining objects of any type */
./osal/src/os/shared/src/osapi-common.c:434:     * Assuming the main task is sitting in OS_IdleLoop(), this implementation
./osal/src/os/shared/src/osapi-file.c:401:            if (stream->socket_domain == OS_SocketDomain_INVALID && strcmp(stream->stream_name, old) == 0)
./osal/src/os/shared/src/osapi-file.c:570:        if (stream->socket_domain == OS_SocketDomain_INVALID && (strcmp(stream->stream_name, Filename) == 0))
./osal/src/os/shared/src/osapi-file.c:608:        if (stream->socket_domain == OS_SocketDomain_INVALID && (strcmp(stream->stream_name, Filename) == 0))
./osal/src/os/shared/src/osapi-sockets.c:127:int32 OS_SocketOpen(osal_id_t *sock_id, OS_SocketDomain_t Domain, OS_SocketType_t Type)
./osal/src/os/shared/src/osapi-sockets.c:144:        stream->socket_domain = Domain;
./osal/src/os/shared/src/osapi-sockets.c:181:        if (stream->socket_domain == OS_SocketDomain_INVALID)
./osal/src/os/shared/src/osapi-sockets.c:274:                conn->socket_domain = sock->socket_domain;
./osal/src/os/shared/src/osapi-sockets.c:277:                OS_SocketAddrInit_Impl(Addr, sock->socket_domain);
./osal/src/os/shared/src/osapi-sockets.c:321:        if (stream->socket_domain == OS_SocketDomain_INVALID)
./osal/src/os/shared/src/osapi-sockets.c:370:        if (stream->socket_domain == OS_SocketDomain_INVALID)
./osal/src/os/shared/src/osapi-sockets.c:552:int32 OS_SocketAddrInit(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/os/shared/src/osapi-sockets.c:557:    return OS_SocketAddrInit_Impl(Addr, Domain);
./osal/src/os/shared/inc/os-shared-sockets.h:136:    Purpose: Initializes an OSAL SockAddr structure to the given address domain
./osal/src/os/shared/inc/os-shared-sockets.h:140:int32 OS_SocketAddrInit_Impl(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain);
./osal/src/os/shared/inc/os-shared-sockets.h:156:            For IPV4 (SocketDomain_INET) this will parse the dotted decimal IP address.
./osal/src/os/shared/inc/os-shared-common.h:112:   The "IdleLoop_Impl" is called by the main thread once
./osal/src/os/shared/inc/os-shared-file.h:37:    uint8  socket_domain;
./osal/src/os/vxworks/src/os-impl-tasks.c:142:     * Get priority/stack specs from main struct
./osal/src/os/portable/os-impl-bsd-sockets.c:99:    int                             os_domain;
./osal/src/os/portable/os-impl-bsd-sockets.c:127:    switch (stream->socket_domain)
./osal/src/os/portable/os-impl-bsd-sockets.c:129:        case OS_SocketDomain_INET:
./osal/src/os/portable/os-impl-bsd-sockets.c:130:            os_domain = AF_INET;
./osal/src/os/portable/os-impl-bsd-sockets.c:133:        case OS_SocketDomain_INET6:
./osal/src/os/portable/os-impl-bsd-sockets.c:134:            os_domain = AF_INET6;
./osal/src/os/portable/os-impl-bsd-sockets.c:141:    impl->fd = socket(os_domain, os_type, os_proto);
./osal/src/os/portable/os-impl-bsd-sockets.c:630:int32 OS_SocketAddrInit_Impl(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/os/portable/os-impl-bsd-sockets.c:639:    switch (Domain)
./osal/src/os/portable/os-impl-bsd-sockets.c:641:        case OS_SocketDomain_INET:
./osal/src/os/portable/os-impl-bsd-sockets.c:646:        case OS_SocketDomain_INET6:
./osal/src/os/portable/os-impl-no-sockets.c:132:int32 OS_SocketAddrInit_Impl(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/os/posix/src/os-impl-binsem.c:383:     * The main delay is in the pthread_cond_wait() below.
./osal/src/os/posix/src/os-impl-tasks.c:81:         * Spread the remainder of OSAL priorities over the remainder of local priorities
./osal/src/os/posix/src/os-impl-tasks.c:276:     * This will be used for the signal mask of the main thread
./osal/src/os/posix/src/os-impl-tasks.c:285:     * SIGHUP is used to wake up the main thread when necessary,
./osal/src/os/posix/src/os-impl-tasks.c:296:    ** Raise the priority of the current (main) thread so that subsequent
./osal/src/os/posix/src/os-impl-tasks.c:392:                OS_DEBUG("Could not setschedparam in main thread: %s (%d)\n", strerror(ret), ret);
./osal/src/os/posix/src/os-impl-tasks.c:406:        OS_DEBUG("Could not getschedparam in main thread: %s (%d)\n", strerror(ret), ret);
./osal/src/os/posix/src/os-impl-tasks.c:498:    ** Test to see if the original main task scheduling priority worked.
./osal/src/os/rtems/src/os-impl-tasks.c:303:     * This is supposed to maintain the "reverse lookup" information used
./osal/src/os/rtems/src/os-impl-tasks.c:315:     * An alternative for performance improvements might be to use a locally maintained
./osal/src/os/inc/osapi-common.h:151: * Normally for embedded applications, the OSAL is initialized after boot and will remain
./osal/src/os/inc/osapi-common.h:172: * This should be called from the BSP main routine or initial thread after all other
./osal/src/os/inc/osapi-module.h:112: * dynamic module loading to maintain the same semantics
./osal/src/os/inc/osapi-sockets.h:61:/** @brief Socket domain */
./osal/src/os/inc/osapi-sockets.h:64:    OS_SocketDomain_INVALID, /**< @brief Invalid */
./osal/src/os/inc/osapi-sockets.h:65:    OS_SocketDomain_INET,    /**< @brief IPv4 address family, most commonly used) */
./osal/src/os/inc/osapi-sockets.h:66:    OS_SocketDomain_INET6,   /**< @brief IPv6 address family, depends on OS/network stack support */
./osal/src/os/inc/osapi-sockets.h:67:    OS_SocketDomain_MAX      /**< @brief Maximum */
./osal/src/os/inc/osapi-sockets.h:68:} OS_SocketDomain_t;
./osal/src/os/inc/osapi-sockets.h:149: * @param[in]   Domain       The address family
./osal/src/os/inc/osapi-sockets.h:154:int32 OS_SocketAddrInit(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain);
./osal/src/os/inc/osapi-sockets.h:254: * A new, unconnected and unbound socket is allocated of the given domain and type.
./osal/src/os/inc/osapi-sockets.h:257: * @param[in]   Domain   The domain / address family of the socket (INET or INET6, etc)
./osal/src/os/inc/osapi-sockets.h:263:int32 OS_SocketOpen(osal_id_t *sock_id, OS_SocketDomain_t Domain, OS_SocketType_t Type);
./osal/src/ut-stubs/osapi-sockets-stubs.c:98:int32 OS_SocketAddrInit(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/ut-stubs/osapi-sockets-stubs.c:103:    UT_GenStub_AddParam(OS_SocketAddrInit, OS_SocketDomain_t, Domain);
./osal/src/ut-stubs/osapi-sockets-stubs.c:219:int32 OS_SocketOpen(osal_id_t *sock_id, OS_SocketDomain_t Domain, OS_SocketType_t Type)
./osal/src/ut-stubs/osapi-sockets-stubs.c:224:    UT_GenStub_AddParam(OS_SocketOpen, OS_SocketDomain_t, Domain);
./osal/src/tests/bin-sem-flush-test/bin-sem-flush-test.c:196:     * and then we will assert that these remain zero
./osal/src/tests/time-base-api-test/time-base-api-test.c:55:     * result, which is checked/asserted in the main task.
./osal/src/tests/time-base-api-test/time-base-api-test.c:127:    /* Test for nominal inputs - these resources are used for the remainder of test */
./osal/src/tests/timer-test/timer-test.c:92:     * In the new versions of OSAL, timers do NOT work in the "main" thread,
./osal/src/tests/timer-test/timer-test.c:156:    ** Let the main thread sleep
./osal/src/tests/network-api-test/network-api-test.c:93:    actual = OS_SocketOpen(&p1_socket_id, OS_SocketDomain_INET, OS_SocketType_DATAGRAM);
./osal/src/tests/network-api-test/network-api-test.c:104:        actual = OS_SocketAddrInit(&p1_addr, OS_SocketDomain_INET);
./osal/src/tests/network-api-test/network-api-test.c:123:        actual = OS_SocketOpen(&p2_socket_id, OS_SocketDomain_INET, OS_SocketType_DATAGRAM);
./osal/src/tests/network-api-test/network-api-test.c:128:        actual = OS_SocketAddrInit(&p2_addr, OS_SocketDomain_INET);
./osal/src/tests/network-api-test/network-api-test.c:149:        actual = OS_SocketOpen(&socket_id, OS_SocketDomain_INET6, OS_SocketType_DATAGRAM);
./osal/src/tests/network-api-test/network-api-test.c:161:        actual   = OS_SocketOpen(NULL, OS_SocketDomain_INVALID, OS_SocketType_INVALID);
./osal/src/tests/network-api-test/network-api-test.c:165:        actual   = OS_SocketOpen(&socket_id, OS_SocketDomain_MAX, OS_SocketType_MAX);
./osal/src/tests/network-api-test/network-api-test.c:169:        actual = OS_SocketAddrInit(&addr, OS_SocketDomain_INET6);
./osal/src/tests/network-api-test/network-api-test.c:179:        actual = OS_SocketAddrInit(NULL, OS_SocketDomain_INET6);
./osal/src/tests/network-api-test/network-api-test.c:191:        actual   = OS_SocketAddrInit(&addr, OS_SocketDomain_INVALID);
./osal/src/tests/network-api-test/network-api-test.c:195:        actual   = OS_SocketAddrInit(NULL, OS_SocketDomain_INVALID);
./osal/src/tests/network-api-test/network-api-test.c:552:    actual      = OS_SocketOpen(&s_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/network-api-test/network-api-test.c:563:        actual = OS_SocketAddrInit(&s_addr, OS_SocketDomain_INET);
./osal/src/tests/network-api-test/network-api-test.c:593:        actual = OS_SocketAddrInit(&c_addr, OS_SocketDomain_INET);
./osal/src/tests/network-api-test/network-api-test.c:618:            actual = OS_SocketOpen(&c_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/select-test/select-test.c:96:    actual      = OS_SocketOpen(&s_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/select-test/select-test.c:107:        actual = OS_SocketAddrInit(&s_addr, OS_SocketDomain_INET);
./osal/src/tests/select-test/select-test.c:137:    actual = OS_SocketOpen(&c_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/select-test/select-test.c:142:    actual = OS_SocketAddrInit(&c_addr, OS_SocketDomain_INET);
./osal/src/tests/select-test/select-test.c:185:    actual       = OS_SocketOpen(&s2_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/select-test/select-test.c:190:    actual = OS_SocketAddrInit(&s2_addr, OS_SocketDomain_INET);
./osal/src/tests/select-test/select-test.c:219:    actual = OS_SocketOpen(&c2_socket_id, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/tests/select-test/select-test.c:224:    actual = OS_SocketAddrInit(&c2_addr, OS_SocketDomain_INET);
./osal/src/tests/timer-add-api-test/timer-add-api-test.c:135:    ** Let the main thread sleep
./osal/src/unit-test-coverage/ut-stubs/src/sys-socket-stubs.c:118:int OCS_socket(int domain, int type, int protocol)
./osal/src/unit-test-coverage/ut-stubs/src/sys-socket-stubs.c:120:    UT_Stub_RegisterContextGenericArg(UT_KEY(OCS_socket), domain);
./osal/src/unit-test-coverage/ut-stubs/src/os-shared-sockets-impl-stubs.c:89:int32 OS_SocketAddrInit_Impl(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/unit-test-coverage/ut-stubs/src/os-shared-sockets-impl-stubs.c:94:    UT_GenStub_AddParam(OS_SocketAddrInit_Impl, OS_SocketDomain_t, Domain);
./osal/src/unit-test-coverage/ut-stubs/inc/OCS_sys_socket.h:97:extern int         OCS_socket(int domain, int type, int protocol);
./osal/src/unit-test-coverage/shared/src/coveragetest-idmap.c:491:    /* set "true" for the remainder of tests */
./osal/src/unit-test-coverage/shared/src/coveragetest-idmap.c:695:     * This test case mainly focuses on additional error checking
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:90:     * int32 OS_SocketOpen(uint32 *sock_id, OS_SocketDomain_t Domain, OS_SocketType_t Type)
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:94:    int32     actual = OS_SocketOpen(&objid, OS_SocketDomain_INET, OS_SocketType_STREAM);
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:100:    actual   = OS_SocketOpen(NULL, OS_SocketDomain_INVALID, OS_SocketType_INVALID);
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:119:    OS_stream_table[1].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:130:     * Should fail if not a socket domain
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:132:    OS_stream_table[1].socket_domain = OS_SocketDomain_INVALID;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:140:    OS_stream_table[1].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:227:    OS_stream_table[idbuf].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:242:    OS_stream_table[1].socket_domain = OS_SocketDomain_INVALID;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:251:    OS_stream_table[1].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:277:    OS_stream_table[idbuf].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:338:    OS_stream_table[idbuf].socket_domain = OS_SocketDomain_INVALID;
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:507:     * int32 OS_SocketAddrInit(OS_SockAddr_t *Addr, OS_SocketDomain_t Domain)
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:519:    actual = OS_SocketAddrInit(&Addr, OS_SocketDomain_INVALID);
./osal/src/unit-test-coverage/shared/src/coveragetest-sockets.c:537:    actual = OS_SocketAddrInit(NULL, OS_SocketDomain_INVALID);
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:89:    /* Invalid domain type */
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:91:    OS_stream_table[0].socket_domain = -1;
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:95:    OS_stream_table[0].socket_domain = OS_SocketDomain_INET;
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:101:    OS_stream_table[0].socket_domain = OS_SocketDomain_INET6;
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:354:    /* Unknown domain */
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:365:    OSAPI_TEST_FUNCTION_RC(OS_SocketAddrInit_Impl, (&addr, OS_SocketDomain_INET), OS_SUCCESS);
./osal/src/unit-test-coverage/portable/src/coveragetest-bsd-sockets.c:370:    OSAPI_TEST_FUNCTION_RC(OS_SocketAddrInit_Impl, (&addr, OS_SocketDomain_INET6), OS_SUCCESS);
./osal/src/examples/tasking-example/README.txt:1:This example1.c file was the only example included with version 1.0 of the OSAL. Its main function is to show the OSAL working by passing messages between tasks. It will continue indefinitely.
./osal/src/unit-tests/oscore-test/ut_oscore_task_test.c:271:    ** Release the semaphore so the main function can record the results of the test
./osal/src/unit-tests/oscore-test/ut_oscore_task_test.c:290:    ** This test works because it is being called from the main task
./osal/src/unit-tests/ostimer-test/ut_ostimer_timerio_test.c:92:         * result, which is checked/asserted in the main task.
./osal/src/unit-tests/osloader-test/ut_osloader_symtable_test.c:75:    if (!UT_IMPL(OS_SymbolLookup(&symbol_addr, "main")))
./osal/src/unit-tests/osloader-test/ut_osloader_symtable_test.c:91:    /* Setup for remainder of tests */
./osal/src/unit-tests/osloader-test/ut_osloader_symtable_test.c:126:    if (!UT_IMPL(OS_ModuleSymbolLookup(OS_OBJECT_ID_UNDEFINED, &symbol_addr, "main")))
./osal/src/unit-tests/osloader-test/ut_osloader_symtable_test.c:142:    /* Setup for remainder of tests */
./osal/.github/workflows/static-analysis.yml:7:      - main
./osal/.github/workflows/format-check.yml:3:# Run on main push and pull requests
./osal/.github/workflows/format-check.yml:7:      - main
./osal/.github/workflows/format-check.yml:22:          sudo add-apt-repository 'deb http://apt.llvm.org/bionic/   llvm-toolchain-bionic-10 main'
./osal/README.md:165:- These accessor functions are the preferred way to get the OSAL version string, from now on users should avoid using the macro definitions as it is evaluated at OSAL library compile time, rather than application compile time, and thus will remain correct in the event that OSAL is relinked without recompiling the application.
./osal/README.md:185:- Adds Code QL analysis on push to main and pull requests (to main)
./osal/README.md:349: - In the next major OSAL release, this code will be no longer supported at all. It should be removed early in the cycle to avoid needing to maintain this compatibility code. This code was already conditional on the OSAL_OMIT_DEPRECATED flag and as such the CCB has already tested/verified running the code in this configuration as part of CI scripts. After this change, the build should be equivalent to the result of building with OMIT_DEPRECATED=true.
./osal/README.md:450:- No more user-maintained osconfig.h file, this is now replaced by a cmake configuration file.
./osal/README.md:559:See the [Configuration Guide](https://github.com/nasa/osal/blob/main/doc/OSAL-Configuration-Guide.md) for more information.
./osal/doc/OSAL-Configuration-Guide.md:49:|  Cyclic  Redundancy  Check | A polynomial based method for checking that a data set has remained unchanged from one time period to another.    |
./osal/doc/OSAL-Configuration-Guide.md:59:| User  | Anyone who interacts with the Software Application or system in its operational state.  A user can be a developer, a tester, an operator, or a maintainer. 
./osal/doc/OSAL-Configuration-Guide.md:347:add_executable(my_executable main.c)
./osal/doc/OSAL-Configuration-Guide.md:409:### Configure the application's main entry point
./osal/doc/OSAL-Configuration-Guide.md:411:The OSAL development environment provides the main entry point/startup
./osal/doc/OSAL-Configuration-Guide.md:484:software to remain portable.
./osal/doc/OSAL-Configuration-Guide.md:702:while all basic state/table maintenance and error checking is performed at
./osal/doc/src/CMakeLists.txt:10:# from the main OSAL CMakeLists.txt as a subdirectory (useful in the
./osal/doc/src/CMakeLists.txt:37:    ${CMAKE_CURRENT_SOURCE_DIR}/osalmain.dox
./osal/doc/src/osal_fs.dox:81: support using open directly by an app and maintain abstraction on the file system.
./osal/doc/src/osalmain.dox:2:  \mainpage Osal API Documentation
./osal/SECURITY.md:13:**Disclaimer: nasa/OSAL is not responsible for any liability incurred under the [Apache License 2.0](https://github.com/nasa/osal/blob/main/LICENSE).**
./osal/SECURITY.md:31:Cppcheck is ran for every push on the main branch and every pull request on all branches of OSAL in Github Actions. 
./osal/LICENSE:44:      of this License, Derivative Works shall not include works that remain
./osal/CONTRIBUTING.md:3:Please see our [top-level contributing guide](https://github.com/nasa/cFS/blob/main/CONTRIBUTING.md) for more information on how to contribute. 
./README.md:17:  - cFE App Developer's Guide: https://github.com/nasa/cFE/blob/main/docs/cFE%20Application%20Developers%20Guide.md
./README.md:122:The cFS-GroundSystem tool can be used to send commands and receive telemetry.  For details on using and setting up the Ground System, see the [Guide-GroundSystem](https://github.com/nasa/cFS-GroundSystem/blob/main/Guide-GroundSystem.md).  Note it depends on PyQt5 and PyZMQ:
./SECURITY.md:15:**Disclaimer: nasa/cFS is not responsible for any liability incurred as stated under the [Apache License 2.0](https://github.com/nasa/cFS/blob/main/LICENSE).**
./SECURITY.md:39:Cppcheck is ran for every push on the main branch and every pull request on all branches of cFS in Github Actions.
./LICENSE:44:      of this License, Derivative Works shall not include works that remain
./CODE_OF_CONDUCT.md:4:In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.
./CODE_OF_CONDUCT.md:22:Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.
./CODE_OF_CONDUCT.md:24:Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.
./CODE_OF_CONDUCT.md:27:This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.
./CODE_OF_CONDUCT.md:30:Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by [contacting the cFS Product Team](README.md#contact-the-cfs-product-team). All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.
./CODE_OF_CONDUCT.md:32:Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project’s leadership.
./CONTRIBUTING.md:80:3. Submit a pull request to the nasa `main` branch. We recommend creating your pull-request as a "draft" and to commit early and often so the community can give you feedback at the beginning of the process as opposed to asking you to change hours of hard work at the end.
./CONTRIBUTING.md:88:    - Corporate Contributor License agreement : https://github.com/nasa/cFE/blob/main/docs/GSC_18128_Corp_CLA_form_1219.pdf
./CONTRIBUTING.md:89:    - Individual Contributor License agreement : https://github.com/nasa/cFE/blob/main/docs/GSC_18128_Ind_CLA_form_1219.pdf
./CONTRIBUTING.md:117:1. Switch to the main branch and ensure you are up to date:
./CONTRIBUTING.md:119:git checkout main && git pull
./CONTRIBUTING.md:127:git rebase main -i
./CONTRIBUTING.md:162:git reset --soft main
./CONTRIBUTING.md:182:1. Make a new branch with a new name at the current main:
./CONTRIBUTING.md:229:    - The cFS submodules uses the Format Check workflow to ensure users follow the [clang-format-10](https://github.com/nasa/cFS/blob/main/.clang-format) style. For more information on how to use the Format Check workflow, view [Using GitHub Actions Workflows](#using-github-actions-workflows).  
./CONTRIBUTING.md:230:    - The [cFS_IdentifierNamingConvention document](https://github.com/nasa/cFE/blob/main/docs/cFS_IdentifierNamingConvention.md) provides a simple naming convention guide for cFE/cFS for commands and telemetry that simplifies the EDS to ground telemetry and commands database conversion.
./CONTRIBUTING.md:231:    - The [cFE Application Developers Guide](https://github.com/nasa/cFE/blob/main/docs/cFE%20Application%20Developers%20Guide.md) contains code conventions such as naming conventions for header files.
./CONTRIBUTING.md:275:1. Workflows are under [.github/workflows](https://github.com/nasa/cFS/tree/main/).
./CONTRIBUTING.md:292:Our CodeQL action uses a configuration file to use specific queries, which can be found at [.github/codeql](https://github.com/nasa/cFS/tree/main/.github/codeql).
